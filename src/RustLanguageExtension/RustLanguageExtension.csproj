<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <MinimumVisualStudioVersion>17.0</MinimumVisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <TargetFramework>TargetFramework</TargetFramework>
    <TargetFramework>netstandard2.0</TargetFramework>
    <OutputType>Library</OutputType>
	<ProjectTypeGuids>{82b43b9b-a64c-4715-b499-d71e9ca2bd60};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <GeneratePkgDefFile>false</GeneratePkgDefFile>
    <IncludeAssemblyInVSIXContainer>true</IncludeAssemblyInVSIXContainer>
	<IncludePkgdefInVSIXContainer>false</IncludePkgdefInVSIXContainer>
    <IncludeDebugSymbolsInVSIXContainer>false</IncludeDebugSymbolsInVSIXContainer>
    <IncludeDebugSymbolsInLocalVSIXDeployment>false</IncludeDebugSymbolsInLocalVSIXDeployment>
    <CopyBuildOutputToOutputDirectory>true</CopyBuildOutputToOutputDirectory>
    <CopyOutputSymbolsToOutputDirectory>false</CopyOutputSymbolsToOutputDirectory>
    <StartAction>Program</StartAction>
    <StartProgram Condition="'$(DevEnvDir)' != ''">$(DevEnvDir)devenv.exe</StartProgram>
    <StartArguments>/rootsuffix Exp</StartArguments>
    <UseCodebase>true</UseCodebase>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
	<LangVersion>8.0</LangVersion>
	<Nullable>enable</Nullable>
	<DebugType>portable</DebugType>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <CreateVsixContainer>True</CreateVsixContainer>
    <DeployExtension>True</DeployExtension>
    <CopyVsixExtensionFiles>True</CopyVsixExtensionFiles>
	<!-- Enable the dummy target to force the VSIX build when using the .NET Standard. -->
	<ForceVsixBuild>true</ForceVsixBuild>
	<!-- Emulation of parts of Microsoft.CSharp.targets to enable Microsoft.VsSDK.targets: -->
	<EmulateMicrosoftCSharpTargets>$(ForceVsixBuild)</EmulateMicrosoftCSharpTargets>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.VisualStudio.ComponentModelHost" Version="17.1.386" />
    <PackageReference Include="Microsoft.VisualStudio.CoreUtility" Version="17.1.386" />
    <PackageReference Include="Microsoft.VisualStudio.ImageCatalog" Version="17.1.32210.191" />
    <PackageReference Include="Microsoft.VisualStudio.LanguageServer.Client" Version="17.1.68" />
    <PackageReference Include="Microsoft.VisualStudio.SDK" Version="17.1.32210.191" />
    <PackageReference Include="Microsoft.VisualStudio.Settings.15.0" Version="17.1.32210.191" />
    <PackageReference Include="Microsoft.VisualStudio.Shell.Framework" Version="17.1.32210.191" />
    <PackageReference Include="Microsoft.VisualStudio.Threading" Version="17.1.46" />
    <PackageReference Include="Microsoft.VisualStudio.Utilities" Version="17.1.32210.191" />
    <PackageReference Include="Microsoft.VisualStudio.Workspace" Version="16.3.43" />
    <PackageReference Include="Microsoft.VisualStudio.Workspace.VSIntegration" Version="16.3.43" />
    <PackageReference Include="Microsoft.VSSDK.BuildTools" Version="17.1.4057">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers" Version="0.3.310801">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Update="Nerdbank.GitVersioning" Version="3.4.255" />
    <PackageReference Update="StyleCop.Analyzers" Version="1.1.118" />
  </ItemGroup>
  <!-- Dummy target just to trigger the VSIX build. I am no MSBuild expert, but despite all the things added to PrepareForRunDependsOn, it still seems necessary. -->
  <Target Name="ForceVsixBuild" AfterTargets="Build" Condition="$(ForceVsixBuild)"
    DependsOnTargets="GeneratePkgDef;
      CopyPkgDef;
      CreateVsixContainer;
      DeployVsixExtensionFiles;
      CopyVsixManifestFile;
      CopyVsixExtensionFiles;"/>
  <!-- Emulation of parts of Microsoft.CSharp.targets to enable Microsoft.VsSDK.targets: -->
  <PropertyGroup Condition="$(EmulateMicrosoftCSharpTargets)">
    <TargetName Condition=" '$(TargetName)' == '' ">$(AssemblyName)</TargetName>
    <TargetExt Condition="'$(TargetExt)' == '' and '$(OutputType)'=='library'">.dll</TargetExt>
    <TargetFileName Condition=" '$(TargetFileName)' == '' ">$(TargetName)$(TargetExt)</TargetFileName>
	<OutDir Condition=" '$(OutDir)' == '' ">$(OutputPath)</OutDir>
    <OutDir Condition="'$(OutDir)' != '' and !HasTrailingSlash('$(OutDir)')">$(OutDir)\</OutDir>
	<TargetDir Condition="'$(OutDir)' != ''">$([MSBuild]::Escape($([System.IO.Path]::GetFullPath(`$([System.IO.Path]::Combine(`$(MSBuildProjectDirectory)`, `$(OutDir)`))`))))</TargetDir>
    <TargetPath Condition=" '$(TargetPath)' == '' ">$(TargetDir)$(TargetFileName)</TargetPath>
	<BaseIntermediateOutputPath Condition="'$(BaseIntermediateOutputPath)' == ''">obj\</BaseIntermediateOutputPath>
    <BaseIntermediateOutputPath Condition="!HasTrailingSlash('$(BaseIntermediateOutputPath)')">$(BaseIntermediateOutputPath)\</BaseIntermediateOutputPath>
    <IntermediateOutputPath Condition="'$(IntermediateOutputPath)' == '' and '$(PlatformName)' == 'AnyCPU'">$(BaseIntermediateOutputPath)$(Configuration)\</IntermediateOutputPath>
    <IntermediateOutputPath Condition="'$(IntermediateOutputPath)' == '' and '$(PlatformName)' != 'AnyCPU'">$(BaseIntermediateOutputPath)$(PlatformName)\$(Configuration)\</IntermediateOutputPath>
    <IntermediateOutputPath Condition="!HasTrailingSlash('$(IntermediateOutputPath)')">$(IntermediateOutputPath)\</IntermediateOutputPath>
  </PropertyGroup>
  <Import Project="$(VSToolsPath)\VSSDK\Microsoft.VsSDK.targets" Condition="'$(VSToolsPath)' != ''" />
</Project>